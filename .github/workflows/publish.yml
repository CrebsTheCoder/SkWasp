name: Build

on:
  push:
    branches: ["release"]

permissions:
  contents: write # Needed to create releases and upload release assets

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest # Use ubuntu-latest unless you have a specific need for 20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Updated to v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4 # No sub-version needed, v4 is fine
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle' # Enable built-in Gradle caching with setup-java
          
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build # Use the Gradle wrapper to run the build

      - name: Set outputs (Short SHA and Repo Name)
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "repo_name=$(echo '${{ github.repository }}' | awk -F / '{print $2}')" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4 # Updated to v4
        with:
          name: ${{ steps.vars.outputs.repo_name }}-${{ steps.vars.outputs.sha_short }} # Use hyphenated name for clarity
          path: build/libs/*.jar
          retention-days: 7 

      - name: Create Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v2 # Updated to v2
        with:
          name: Release ${{ steps.vars.outputs.sha_short }} # Release name often includes version/sha
          tag_name: ${{ steps.vars.outputs.sha_short }}
          body: |
            Automatic release triggered by push to release branch.
            Commit: ${{ github.sha }}
            Artifact Name: ${{ steps.vars.outputs.repo_name }}-${{ steps.vars.outputs.sha_short }}
          files: build/libs/*.jar
          generate_release_notes: true # Auto-generate release notes based on commits since last tag
